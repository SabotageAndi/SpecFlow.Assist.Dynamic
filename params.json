{"tagline":"Extension methods to create dynamic objects from SpecFlow tables","body":"# SpecFlow.Assist.Dynamic\r\n\r\nSpecFlow.Assist.Dynamic is a couple of simple extension methods for the SpecFlow Table object that helps you to write less code. \r\n\r\nWhat would you rather write? \r\nThis:\r\n\r\n    [Binding]\r\n    public class StepsUsingStaticType\r\n    {\r\n        private Person _person;\r\n     \r\n        [Given(@\"I create an instance from this table\")]\r\n        public void GivenICreateAnInstanceFromThisTable(Table table)\r\n        {\r\n            _person = table.CreateInstance<Person>();\r\n        }\r\n\r\n        [Then(@\"the Name property on Person should equal '(.*)'\")]\r\n        public void PersonNameShouldBe(string expectedValue)\r\n        {\r\n            Assert.AreEqual(expectedValue, _person.Name);\r\n        }\r\n\r\n    }\r\n\r\n    public class Person\r\n    {\r\n        public string Name { get; set; }\r\n        public int Age { get; set; }\r\n        public DateTime BirthDate { get; set; }\r\n        public double LengthInMeters { get; set; }\r\n    }\r\n    \r\nOr this:  \r\n\r\n    [Binding]\r\n    public class StepsUsingDynamic\r\n    {\r\n        private dynamic _instance;\r\n     \r\n        [Given(@\"I create a dynamic instance from this table using step argument transformation\")]\r\n        public void c(dynamic instance)\r\n        {\r\n            _instance = instance;\r\n        }\r\n\r\n        [Then(@\"the Name property should equal '(.*)'\")]\r\n        public void NameShouldBe(string expectedValue)\r\n        {\r\n            Assert.AreEqual(expectedValue, _instance.Name.ToString());\r\n        }\r\n    }\r\n    \r\nThe later version uses SpecFlow.Assist.Dynamic. Shorter, sweater and more fun!\r\n\r\nInstall via NuGet: [Install-Package SpecFlow.Assist.Dynamic](http://nuget.org/packages/SpecFlow.Assist.Dynamic)\r\n\r\nSee documentation: https://github.com/marcusoftnet/SpecFlow.Assist.Dynamic/wiki/Documentation","google":"UA-30760272-1","note":"Don't delete this file! It's used internally to help with page regeneration.","name":"Specflow.Assist.Dynamic"}